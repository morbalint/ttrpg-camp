name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "dev" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "dev" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Build just the client as a docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: "src/TtrpgCamp.App.Client/Dockerfile"
          load: true
          push: false
          tags: "client:${{ github.sha }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build just the App
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: "src/TtrpgCamp.App/Dockerfile"
          build-args: |
            BASE_IMAGE=client:${{ github.sha }}
          tags: "app:${{ github.sha }}"
          push: false
          load: true
          pull: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Client Unit Test Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: "test/TtrpgCamp.App.Client.Test/Dockerfile"
          build-args: |
            BASE_IMAGE=client:${{ github.sha }}
          tags: "client-test:${{ github.sha }}"
          load: true
          push: false
          pull: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run client unit tests
        run: "docker run client-test:${{ github.sha }}"

      - name: Build App Unit Tests
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: "test/TtrpgCamp.App.Client.Test/Dockerfile"
          build-args: |
            BASE_IMAGE=app:${{ github.sha }}
          tags: "app-test:${{ github.sha }}"
          load: true
          push: false
          pull: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run App unit tests
        run: "docker run app-test:${{ github.sha }}"
      
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          build-args: |
            BASE_IMAGE=app:${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          pull: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
