name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "dev" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "dev" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build just the client as a docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: "src/TtrpgCamp.App.Client/Dockerfile"
          load: true
          push: false
          tags: "client:${{ github.sha }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build just the App
        run: docker build -f "src/TtrpgCamp.App/Dockerfile" --build-arg BASE_IMAGE=client:${{ github.sha }} -t "app:${{ github.sha }}" . 

      - name: Build Client Unit Test Docker image
        run: docker build -f "test/TtrpgCamp.App.Client.Test/Dockerfile" --build-arg BASE_IMAGE=client:${{ github.sha }} -t "client-test:${{ github.sha }}" .   
      - name: Run client unit tests
        run: "docker run client-test:${{ github.sha }}"

      - name: Build App Unit Tests
        run: docker build -f "test/TtrpgCamp.App.Client.Test/Dockerfile" --build-arg BASE_IMAGE=app:${{ github.sha }} -t "app-test:${{ github.sha }}" .   
      - name: Run App unit tests
        run: "docker run app-test:${{ github.sha }}"
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        run: docker build -t ${{ steps.meta.outputs.tags }} --build-arg BASE_IMAGE=app:${{ github.sha }} .  
      - name: Push Docker image
        run: docker push ${{ steps.meta.outputs.tags }}