@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider

@code {

    ClaimsPrincipal? ClaimsPrincipalUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipalUser = authState.User;
    }
}


<div class="page">
    <div class="sidebar">
        <NavMenu/>
    </div>

    <main>
        <div class="top-row px-4">
            @if (ClaimsPrincipalUser?.Identity?.IsAuthenticated != true)
            {
                <NavLink href="Identity/Account/Login">Login</NavLink>
            }
            else
            {
                <NavLink href="Identity/Account/Logout">Logout from @ClaimsPrincipalUser.Identity.Name </NavLink>
            }
            
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>